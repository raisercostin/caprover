# Configurable frontend version from previous builds
#ARG CAPROVER_FRONTEND_VERSION=latest
#FROM caprover/caprover:${CAPROVER_FRONTEND_VERSION} AS caprover-frontend

FROM node:18-alpine
RUN apk update && apk upgrade --no-cache && apk add --update --no-cache make gcc g++ git curl openssl openssh

WORKDIR /usr/src/app

# Add frontend
#COPY --from=caprover-frontend /usr/src/app/dist-frontend /usr/src/app/dist-frontend

# Cache backend dependencies
COPY package.json package-lock.json ./
RUN npm ci

# Build backend code
COPY . ./
RUN npm run build && \
     npm prune --production && \
     npm cache clean --force

# # This quick hack invalidates the cache.
ADD https://www.google.com /time.now

# armV7 fails: https://github.com/yarnpkg/yarn/issues/5259 https://github.com/nodejs/docker-node/issues/1335
RUN curl -Iv https://registry.yarnpkg.com/@ant-design/icons-svg/-/icons-svg-4.1.0.tgz && \
    git clone https://github.com/githubsaturn/caprover-frontend.git && \
    cd caprover-frontend && \
    git reset --hard $FRONTEND_COMMIT_HASH && \
    git log --max-count=1 && \
    yarn install  --no-cache --frozen-lockfile --network-timeout 600000 && echo "Installation finished" && \
    yarn run build && echo "Building finished" && \
    mv ./build ../dist-frontend && \
    cd / && \
    rm -rf /usr/src/app/caprover-frontend

RUN npm --version && node --version && ls -al

ENV NODE_ENV=production
ENV PORT=3000
EXPOSE 3000

CMD ["node" , "./built/server.js"]
